<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xz.match.mapper.MatchCertificateSublistMapper">
  <resultMap id="BaseResultMap" type="com.xz.match.entity.MatchCertificateSublist">
    <!--@mbg.generated-->
    <!--@Table match_certificate_sublist-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="certificateId" jdbcType="BIGINT" property="certificateId" />
    <result column="scoreId" jdbcType="BIGINT" property="scoreId" />
    <result column="positionX" jdbcType="VARCHAR" property="positionX" />
    <result column="positionY" jdbcType="VARCHAR" property="positionY" />
    <result column="fontSize" jdbcType="VARCHAR" property="fontSize" />
    <result column="colour" jdbcType="VARCHAR" property="colour" />
    <result column="locked" jdbcType="BOOLEAN" property="locked" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="lastAccess" jdbcType="BIGINT" property="lastAccess" />
    <result column="creatorId" jdbcType="BIGINT" property="creatorId" />
    <result column="createdBy" jdbcType="VARCHAR" property="createdBy" />
    <result column="createdTime" jdbcType="BIGINT" property="createdTime" />
    <result column="updaterId" jdbcType="BIGINT" property="updaterId" />
    <result column="updatedBy" jdbcType="VARCHAR" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, certificateId, scoreId, positionX, positionY, fontSize, colour, locked, version, 
    lastAccess, creatorId, createdBy, createdTime, updaterId, updatedBy
  </sql>
  <select id="selectByExample" parameterType="com.xz.match.entity.MatchCertificateSublistExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from match_certificate_sublist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from match_certificate_sublist
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from match_certificate_sublist
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xz.match.entity.MatchCertificateSublistExample">
    <!--@mbg.generated-->
    delete from match_certificate_sublist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xz.match.entity.MatchCertificateSublist" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into match_certificate_sublist (certificateId, scoreId, positionX, 
      positionY, fontSize, colour, 
      locked, version, lastAccess, 
      creatorId, createdBy, createdTime, 
      updaterId, updatedBy)
    values (#{certificateId,jdbcType=BIGINT}, #{scoreId,jdbcType=BIGINT}, #{positionX,jdbcType=VARCHAR}, 
      #{positionY,jdbcType=VARCHAR}, #{fontSize,jdbcType=VARCHAR}, #{colour,jdbcType=VARCHAR}, 
      #{locked,jdbcType=BOOLEAN}, #{version,jdbcType=INTEGER}, #{lastAccess,jdbcType=BIGINT}, 
      #{creatorId,jdbcType=BIGINT}, #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, 
      #{updaterId,jdbcType=BIGINT}, #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xz.match.entity.MatchCertificateSublist" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into match_certificate_sublist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="certificateId != null">
        certificateId,
      </if>
      <if test="scoreId != null">
        scoreId,
      </if>
      <if test="positionX != null">
        positionX,
      </if>
      <if test="positionY != null">
        positionY,
      </if>
      <if test="fontSize != null">
        fontSize,
      </if>
      <if test="colour != null">
        colour,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="lastAccess != null">
        lastAccess,
      </if>
      <if test="creatorId != null">
        creatorId,
      </if>
      <if test="createdBy != null">
        createdBy,
      </if>
      <if test="createdTime != null">
        createdTime,
      </if>
      <if test="updaterId != null">
        updaterId,
      </if>
      <if test="updatedBy != null">
        updatedBy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="certificateId != null">
        #{certificateId,jdbcType=BIGINT},
      </if>
      <if test="scoreId != null">
        #{scoreId,jdbcType=BIGINT},
      </if>
      <if test="positionX != null">
        #{positionX,jdbcType=VARCHAR},
      </if>
      <if test="positionY != null">
        #{positionY,jdbcType=VARCHAR},
      </if>
      <if test="fontSize != null">
        #{fontSize,jdbcType=VARCHAR},
      </if>
      <if test="colour != null">
        #{colour,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BOOLEAN},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="lastAccess != null">
        #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updaterId != null">
        #{updaterId,jdbcType=BIGINT},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xz.match.entity.MatchCertificateSublistExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from match_certificate_sublist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update match_certificate_sublist
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.certificateId != null">
        certificateId = #{record.certificateId,jdbcType=BIGINT},
      </if>
      <if test="record.scoreId != null">
        scoreId = #{record.scoreId,jdbcType=BIGINT},
      </if>
      <if test="record.positionX != null">
        positionX = #{record.positionX,jdbcType=VARCHAR},
      </if>
      <if test="record.positionY != null">
        positionY = #{record.positionY,jdbcType=VARCHAR},
      </if>
      <if test="record.fontSize != null">
        fontSize = #{record.fontSize,jdbcType=VARCHAR},
      </if>
      <if test="record.colour != null">
        colour = #{record.colour,jdbcType=VARCHAR},
      </if>
      <if test="record.locked != null">
        locked = #{record.locked,jdbcType=BOOLEAN},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.lastAccess != null">
        lastAccess = #{record.lastAccess,jdbcType=BIGINT},
      </if>
      <if test="record.creatorId != null">
        creatorId = #{record.creatorId,jdbcType=BIGINT},
      </if>
      <if test="record.createdBy != null">
        createdBy = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        createdTime = #{record.createdTime,jdbcType=BIGINT},
      </if>
      <if test="record.updaterId != null">
        updaterId = #{record.updaterId,jdbcType=BIGINT},
      </if>
      <if test="record.updatedBy != null">
        updatedBy = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update match_certificate_sublist
    set id = #{record.id,jdbcType=BIGINT},
      certificateId = #{record.certificateId,jdbcType=BIGINT},
      scoreId = #{record.scoreId,jdbcType=BIGINT},
      positionX = #{record.positionX,jdbcType=VARCHAR},
      positionY = #{record.positionY,jdbcType=VARCHAR},
      fontSize = #{record.fontSize,jdbcType=VARCHAR},
      colour = #{record.colour,jdbcType=VARCHAR},
      locked = #{record.locked,jdbcType=BOOLEAN},
      version = #{record.version,jdbcType=INTEGER},
      lastAccess = #{record.lastAccess,jdbcType=BIGINT},
      creatorId = #{record.creatorId,jdbcType=BIGINT},
      createdBy = #{record.createdBy,jdbcType=VARCHAR},
      createdTime = #{record.createdTime,jdbcType=BIGINT},
      updaterId = #{record.updaterId,jdbcType=BIGINT},
      updatedBy = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xz.match.entity.MatchCertificateSublist">
    <!--@mbg.generated-->
    update match_certificate_sublist
    <set>
      <if test="certificateId != null">
        certificateId = #{certificateId,jdbcType=BIGINT},
      </if>
      <if test="scoreId != null">
        scoreId = #{scoreId,jdbcType=BIGINT},
      </if>
      <if test="positionX != null">
        positionX = #{positionX,jdbcType=VARCHAR},
      </if>
      <if test="positionY != null">
        positionY = #{positionY,jdbcType=VARCHAR},
      </if>
      <if test="fontSize != null">
        fontSize = #{fontSize,jdbcType=VARCHAR},
      </if>
      <if test="colour != null">
        colour = #{colour,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BOOLEAN},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="lastAccess != null">
        lastAccess = #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        creatorId = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null">
        createdBy = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        createdTime = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updaterId != null">
        updaterId = #{updaterId,jdbcType=BIGINT},
      </if>
      <if test="updatedBy != null">
        updatedBy = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xz.match.entity.MatchCertificateSublist">
    <!--@mbg.generated-->
    update match_certificate_sublist
    set certificateId = #{certificateId,jdbcType=BIGINT},
      scoreId = #{scoreId,jdbcType=BIGINT},
      positionX = #{positionX,jdbcType=VARCHAR},
      positionY = #{positionY,jdbcType=VARCHAR},
      fontSize = #{fontSize,jdbcType=VARCHAR},
      colour = #{colour,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=BOOLEAN},
      version = #{version,jdbcType=INTEGER},
      lastAccess = #{lastAccess,jdbcType=BIGINT},
      creatorId = #{creatorId,jdbcType=BIGINT},
      createdBy = #{createdBy,jdbcType=VARCHAR},
      createdTime = #{createdTime,jdbcType=BIGINT},
      updaterId = #{updaterId,jdbcType=BIGINT},
      updatedBy = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findBy" parameterType="map" resultType="com.xz.match.entity.MatchCertificateSublist">
    <include refid="listSQL" />
  </select>

  <sql id="listSQL">
    SELECT * FROM match_certificate_sublist
    <where>
      <include refid="condition_sql" />
    </where>
    ORDER BY id DESC
  </sql>

  <sql id="condition_sql">
    <trim prefixOverrides="AND | OR">
      <if test="certificateId != null">
        AND certificateId = #{certificateId}
      </if>
      <if test="scoreId != null">
        AND scoreId = #{scoreId}
      </if>
    </trim>
  </sql>

  <delete id="deleteSubject" parameterType="map">
    DELETE FROM match_certificate_sublist
    WHERE certificateId = #{certificateId}
    <if test="idList != null and idList.size() > 0">
      and id not in
      <foreach collection="idList" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
  </delete>

  <select id="getCertificateSublist" parameterType="map" resultType="com.xz.match.entity.MatchCertificateSublist">
        SELECT
            c.id,
            c.positionX,
            c.positionY,
            c.scoreId,
            c.colour,
            c.fontSize,
            s.score
        FROM
            match_certificate_sublist c
            LEFT JOIN match_score s ON c.scoreId = s.scoreId
        WHERE
            c.certificateId = #{certificateId}
            AND s.recordId = #{recordId}
    </select>
</mapper>