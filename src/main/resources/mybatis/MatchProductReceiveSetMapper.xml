<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xz.match.mapper.MatchProductReceiveSetMapper">
  <resultMap id="BaseResultMap" type="com.xz.match.entity.MatchProductReceiveSet">
    <!--@mbg.generated-->
    <!--@Table match_product_receive_set-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenantId" jdbcType="BIGINT" property="tenantId" />
    <result column="matchName" jdbcType="VARCHAR" property="matchName" />
    <result column="matchId" jdbcType="BIGINT" property="matchId" />
    <result column="subjectName" jdbcType="VARCHAR" property="subjectName" />
    <result column="subjectId" jdbcType="BIGINT" property="subjectId" />
    <result column="pageShow" jdbcType="VARCHAR" property="pageShow" />
    <result column="pageShowComment" jdbcType="VARCHAR" property="pageShowComment" />
    <result column="tips" jdbcType="VARCHAR" property="tips" />
    <result column="signContent" jdbcType="VARCHAR" property="signContent" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="disabled" jdbcType="INTEGER" property="disabled" />
    <result column="locked" jdbcType="BOOLEAN" property="locked" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="lastAccess" jdbcType="BIGINT" property="lastAccess" />
    <result column="creatorId" jdbcType="VARCHAR" property="creatorId" />
    <result column="createdBy" jdbcType="VARCHAR" property="createdBy" />
    <result column="createdTime" jdbcType="BIGINT" property="createdTime" />
    <result column="updaterId" jdbcType="VARCHAR" property="updaterId" />
    <result column="updatedBy" jdbcType="VARCHAR" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, tenantId, matchName, matchId, subjectName, subjectId, pageShow, pageShowComment, 
    tips, signContent, `status`, remark, disabled, locked, version, lastAccess, creatorId, 
    createdBy, createdTime, updaterId, updatedBy
  </sql>
  <select id="selectByExample" parameterType="com.xz.match.entity.MatchProductReceiveSetExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from match_product_receive_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from match_product_receive_set
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from match_product_receive_set
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xz.match.entity.MatchProductReceiveSetExample">
    <!--@mbg.generated-->
    delete from match_product_receive_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xz.match.entity.MatchProductReceiveSet" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into match_product_receive_set (tenantId, matchName, matchId, 
      subjectName, subjectId, pageShow, 
      pageShowComment, tips, signContent, 
      `status`, remark, disabled, 
      locked, version, lastAccess, 
      creatorId, createdBy, createdTime, 
      updaterId, updatedBy)
    values (#{tenantId,jdbcType=BIGINT}, #{matchName,jdbcType=VARCHAR}, #{matchId,jdbcType=BIGINT}, 
      #{subjectName,jdbcType=VARCHAR}, #{subjectId,jdbcType=BIGINT}, #{pageShow,jdbcType=VARCHAR}, 
      #{pageShowComment,jdbcType=VARCHAR}, #{tips,jdbcType=VARCHAR}, #{signContent,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{disabled,jdbcType=INTEGER}, 
      #{locked,jdbcType=BOOLEAN}, #{version,jdbcType=INTEGER}, #{lastAccess,jdbcType=BIGINT}, 
      #{creatorId,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, 
      #{updaterId,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xz.match.entity.MatchProductReceiveSet" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into match_product_receive_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        tenantId,
      </if>
      <if test="matchName != null">
        matchName,
      </if>
      <if test="matchId != null">
        matchId,
      </if>
      <if test="subjectName != null">
        subjectName,
      </if>
      <if test="subjectId != null">
        subjectId,
      </if>
      <if test="pageShow != null">
        pageShow,
      </if>
      <if test="pageShowComment != null">
        pageShowComment,
      </if>
      <if test="tips != null">
        tips,
      </if>
      <if test="signContent != null">
        signContent,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="disabled != null">
        disabled,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="lastAccess != null">
        lastAccess,
      </if>
      <if test="creatorId != null">
        creatorId,
      </if>
      <if test="createdBy != null">
        createdBy,
      </if>
      <if test="createdTime != null">
        createdTime,
      </if>
      <if test="updaterId != null">
        updaterId,
      </if>
      <if test="updatedBy != null">
        updatedBy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="matchName != null">
        #{matchName,jdbcType=VARCHAR},
      </if>
      <if test="matchId != null">
        #{matchId,jdbcType=BIGINT},
      </if>
      <if test="subjectName != null">
        #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="pageShow != null">
        #{pageShow,jdbcType=VARCHAR},
      </if>
      <if test="pageShowComment != null">
        #{pageShowComment,jdbcType=VARCHAR},
      </if>
      <if test="tips != null">
        #{tips,jdbcType=VARCHAR},
      </if>
      <if test="signContent != null">
        #{signContent,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null">
        #{disabled,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BOOLEAN},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="lastAccess != null">
        #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updaterId != null">
        #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xz.match.entity.MatchProductReceiveSetExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from match_product_receive_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update match_product_receive_set
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null">
        tenantId = #{record.tenantId,jdbcType=BIGINT},
      </if>
      <if test="record.matchName != null">
        matchName = #{record.matchName,jdbcType=VARCHAR},
      </if>
      <if test="record.matchId != null">
        matchId = #{record.matchId,jdbcType=BIGINT},
      </if>
      <if test="record.subjectName != null">
        subjectName = #{record.subjectName,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectId != null">
        subjectId = #{record.subjectId,jdbcType=BIGINT},
      </if>
      <if test="record.pageShow != null">
        pageShow = #{record.pageShow,jdbcType=VARCHAR},
      </if>
      <if test="record.pageShowComment != null">
        pageShowComment = #{record.pageShowComment,jdbcType=VARCHAR},
      </if>
      <if test="record.tips != null">
        tips = #{record.tips,jdbcType=VARCHAR},
      </if>
      <if test="record.signContent != null">
        signContent = #{record.signContent,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.disabled != null">
        disabled = #{record.disabled,jdbcType=INTEGER},
      </if>
      <if test="record.locked != null">
        locked = #{record.locked,jdbcType=BOOLEAN},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.lastAccess != null">
        lastAccess = #{record.lastAccess,jdbcType=BIGINT},
      </if>
      <if test="record.creatorId != null">
        creatorId = #{record.creatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        createdBy = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        createdTime = #{record.createdTime,jdbcType=BIGINT},
      </if>
      <if test="record.updaterId != null">
        updaterId = #{record.updaterId,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null">
        updatedBy = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update match_product_receive_set
    set id = #{record.id,jdbcType=BIGINT},
      tenantId = #{record.tenantId,jdbcType=BIGINT},
      matchName = #{record.matchName,jdbcType=VARCHAR},
      matchId = #{record.matchId,jdbcType=BIGINT},
      subjectName = #{record.subjectName,jdbcType=VARCHAR},
      subjectId = #{record.subjectId,jdbcType=BIGINT},
      pageShow = #{record.pageShow,jdbcType=VARCHAR},
      pageShowComment = #{record.pageShowComment,jdbcType=VARCHAR},
      tips = #{record.tips,jdbcType=VARCHAR},
      signContent = #{record.signContent,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      disabled = #{record.disabled,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=BOOLEAN},
      version = #{record.version,jdbcType=INTEGER},
      lastAccess = #{record.lastAccess,jdbcType=BIGINT},
      creatorId = #{record.creatorId,jdbcType=VARCHAR},
      createdBy = #{record.createdBy,jdbcType=VARCHAR},
      createdTime = #{record.createdTime,jdbcType=BIGINT},
      updaterId = #{record.updaterId,jdbcType=VARCHAR},
      updatedBy = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xz.match.entity.MatchProductReceiveSet">
    <!--@mbg.generated-->
    update match_product_receive_set
    <set>
      <if test="tenantId != null">
        tenantId = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="matchName != null">
        matchName = #{matchName,jdbcType=VARCHAR},
      </if>
      <if test="matchId != null">
        matchId = #{matchId,jdbcType=BIGINT},
      </if>
      <if test="subjectName != null">
        subjectName = #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        subjectId = #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="pageShow != null">
        pageShow = #{pageShow,jdbcType=VARCHAR},
      </if>
      <if test="pageShowComment != null">
        pageShowComment = #{pageShowComment,jdbcType=VARCHAR},
      </if>
      <if test="tips != null">
        tips = #{tips,jdbcType=VARCHAR},
      </if>
      <if test="signContent != null">
        signContent = #{signContent,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null">
        disabled = #{disabled,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BOOLEAN},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="lastAccess != null">
        lastAccess = #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        creatorId = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        createdBy = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        createdTime = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updaterId != null">
        updaterId = #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updatedBy = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xz.match.entity.MatchProductReceiveSet">
    <!--@mbg.generated-->
    update match_product_receive_set
    set tenantId = #{tenantId,jdbcType=BIGINT},
      matchName = #{matchName,jdbcType=VARCHAR},
      matchId = #{matchId,jdbcType=BIGINT},
      subjectName = #{subjectName,jdbcType=VARCHAR},
      subjectId = #{subjectId,jdbcType=BIGINT},
      pageShow = #{pageShow,jdbcType=VARCHAR},
      pageShowComment = #{pageShowComment,jdbcType=VARCHAR},
      tips = #{tips,jdbcType=VARCHAR},
      signContent = #{signContent,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      disabled = #{disabled,jdbcType=INTEGER},
      locked = #{locked,jdbcType=BOOLEAN},
      version = #{version,jdbcType=INTEGER},
      lastAccess = #{lastAccess,jdbcType=BIGINT},
      creatorId = #{creatorId,jdbcType=VARCHAR},
      createdBy = #{createdBy,jdbcType=VARCHAR},
      createdTime = #{createdTime,jdbcType=BIGINT},
      updaterId = #{updaterId,jdbcType=VARCHAR},
      updatedBy = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectMatchProductReceiveSetBySubjectId" parameterType="long" resultType="com.xz.match.entity.MatchProductReceiveSet">
        SELECT * FROM match_product_receive_set
        WHERE subjectId = #{subjectId}
    </select>

     <select id="findBy" parameterType="map" resultType="com.xz.match.entity.vo.MatchProductReceiveSetVO">
        <include refid="listSQL" />
    </select>

    <sql id="listSQL">
        SELECT
        a.*,
        IFNULL(b.`status`, 0) `status`,
        b.pageShow,
        b.pageShowComment,
        b.tips
        FROM match_subject a
        LEFT JOIN match_product_receive_set b
        ON a.id = b.subjectId
        <where>
            <include refid="condition_sql" />
        </where>
    </sql>

    <sql id="condition_sql">
        <trim prefixOverrides="AND | OR">
            <if test="id != null">
                AND a.id = #{id}
            </if>
            <if test="matchId != null">
                AND a.matchId = #{matchId}
            </if>
            <if test="matchName != null">
                AND a.matchName = #{matchName}
            </if>
            <if test="subject != null">
                AND a.subject = #{subject}
            </if>
            <if test="state != null">
                AND a.state = #{state}
            </if>
            <if test="type != null">
                AND a.type = #{type}
            </if>
            <if test="tenantId != null">
                AND a.tenantId = #{tenantId}
            </if>
        </trim>
    </sql>
</mapper>