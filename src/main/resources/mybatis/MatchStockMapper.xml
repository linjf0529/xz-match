<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xz.match.mapper.MatchStockMapper">
  <resultMap id="BaseResultMap" type="com.xz.match.entity.MatchStock">
    <!--@mbg.generated-->
    <!--@Table match_stock-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenantId" jdbcType="BIGINT" property="tenantId" />
    <result column="productId" jdbcType="BIGINT" property="productId" />
    <result column="productName" jdbcType="VARCHAR" property="productName" />
    <result column="productSubId" jdbcType="BIGINT" property="productSubId" />
    <result column="productSubName" jdbcType="VARCHAR" property="productSubName" />
    <result column="stockNumber" jdbcType="BIGINT" property="stockNumber" />
    <result column="stockOperation" jdbcType="VARCHAR" property="stockOperation" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="disabled" jdbcType="BOOLEAN" property="disabled" />
    <result column="locked" jdbcType="BOOLEAN" property="locked" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="lastAccess" jdbcType="BIGINT" property="lastAccess" />
    <result column="creatorId" jdbcType="VARCHAR" property="creatorId" />
    <result column="createdBy" jdbcType="VARCHAR" property="createdBy" />
    <result column="createdTime" jdbcType="BIGINT" property="createdTime" />
    <result column="updaterId" jdbcType="VARCHAR" property="updaterId" />
    <result column="updatedBy" jdbcType="VARCHAR" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, tenantId, productId, productName, productSubId, productSubName, stockNumber, 
    stockOperation, remark, disabled, locked, version, lastAccess, creatorId, createdBy, 
    createdTime, updaterId, updatedBy
  </sql>
  <select id="selectByExample" parameterType="com.xz.match.entity.MatchStockExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from match_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from match_stock
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from match_stock
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xz.match.entity.MatchStockExample">
    <!--@mbg.generated-->
    delete from match_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xz.match.entity.MatchStock" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into match_stock (tenantId, productId, productName, 
      productSubId, productSubName, stockNumber, 
      stockOperation, remark, disabled, 
      locked, version, lastAccess, 
      creatorId, createdBy, createdTime, 
      updaterId, updatedBy)
    values (#{tenantId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{productName,jdbcType=VARCHAR}, 
      #{productSubId,jdbcType=BIGINT}, #{productSubName,jdbcType=VARCHAR}, #{stockNumber,jdbcType=BIGINT}, 
      #{stockOperation,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{disabled,jdbcType=BOOLEAN}, 
      #{locked,jdbcType=BOOLEAN}, #{version,jdbcType=INTEGER}, #{lastAccess,jdbcType=BIGINT}, 
      #{creatorId,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, 
      #{updaterId,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xz.match.entity.MatchStock" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into match_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        tenantId,
      </if>
      <if test="productId != null">
        productId,
      </if>
      <if test="productName != null">
        productName,
      </if>
      <if test="productSubId != null">
        productSubId,
      </if>
      <if test="productSubName != null">
        productSubName,
      </if>
      <if test="stockNumber != null">
        stockNumber,
      </if>
      <if test="stockOperation != null">
        stockOperation,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="disabled != null">
        disabled,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="lastAccess != null">
        lastAccess,
      </if>
      <if test="creatorId != null">
        creatorId,
      </if>
      <if test="createdBy != null">
        createdBy,
      </if>
      <if test="createdTime != null">
        createdTime,
      </if>
      <if test="updaterId != null">
        updaterId,
      </if>
      <if test="updatedBy != null">
        updatedBy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productSubId != null">
        #{productSubId,jdbcType=BIGINT},
      </if>
      <if test="productSubName != null">
        #{productSubName,jdbcType=VARCHAR},
      </if>
      <if test="stockNumber != null">
        #{stockNumber,jdbcType=BIGINT},
      </if>
      <if test="stockOperation != null">
        #{stockOperation,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null">
        #{disabled,jdbcType=BOOLEAN},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BOOLEAN},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="lastAccess != null">
        #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updaterId != null">
        #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xz.match.entity.MatchStockExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from match_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update match_stock
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null">
        tenantId = #{record.tenantId,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        productId = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.productName != null">
        productName = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productSubId != null">
        productSubId = #{record.productSubId,jdbcType=BIGINT},
      </if>
      <if test="record.productSubName != null">
        productSubName = #{record.productSubName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockNumber != null">
        stockNumber = #{record.stockNumber,jdbcType=BIGINT},
      </if>
      <if test="record.stockOperation != null">
        stockOperation = #{record.stockOperation,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.disabled != null">
        disabled = #{record.disabled,jdbcType=BOOLEAN},
      </if>
      <if test="record.locked != null">
        locked = #{record.locked,jdbcType=BOOLEAN},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.lastAccess != null">
        lastAccess = #{record.lastAccess,jdbcType=BIGINT},
      </if>
      <if test="record.creatorId != null">
        creatorId = #{record.creatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        createdBy = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        createdTime = #{record.createdTime,jdbcType=BIGINT},
      </if>
      <if test="record.updaterId != null">
        updaterId = #{record.updaterId,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null">
        updatedBy = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update match_stock
    set id = #{record.id,jdbcType=BIGINT},
      tenantId = #{record.tenantId,jdbcType=BIGINT},
      productId = #{record.productId,jdbcType=BIGINT},
      productName = #{record.productName,jdbcType=VARCHAR},
      productSubId = #{record.productSubId,jdbcType=BIGINT},
      productSubName = #{record.productSubName,jdbcType=VARCHAR},
      stockNumber = #{record.stockNumber,jdbcType=BIGINT},
      stockOperation = #{record.stockOperation,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      disabled = #{record.disabled,jdbcType=BOOLEAN},
      locked = #{record.locked,jdbcType=BOOLEAN},
      version = #{record.version,jdbcType=INTEGER},
      lastAccess = #{record.lastAccess,jdbcType=BIGINT},
      creatorId = #{record.creatorId,jdbcType=VARCHAR},
      createdBy = #{record.createdBy,jdbcType=VARCHAR},
      createdTime = #{record.createdTime,jdbcType=BIGINT},
      updaterId = #{record.updaterId,jdbcType=VARCHAR},
      updatedBy = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xz.match.entity.MatchStock">
    <!--@mbg.generated-->
    update match_stock
    <set>
      <if test="tenantId != null">
        tenantId = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        productId = #{productId,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        productName = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productSubId != null">
        productSubId = #{productSubId,jdbcType=BIGINT},
      </if>
      <if test="productSubName != null">
        productSubName = #{productSubName,jdbcType=VARCHAR},
      </if>
      <if test="stockNumber != null">
        stockNumber = #{stockNumber,jdbcType=BIGINT},
      </if>
      <if test="stockOperation != null">
        stockOperation = #{stockOperation,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null">
        disabled = #{disabled,jdbcType=BOOLEAN},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BOOLEAN},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="lastAccess != null">
        lastAccess = #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        creatorId = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        createdBy = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        createdTime = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updaterId != null">
        updaterId = #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updatedBy = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xz.match.entity.MatchStock">
    <!--@mbg.generated-->
    update match_stock
    set tenantId = #{tenantId,jdbcType=BIGINT},
      productId = #{productId,jdbcType=BIGINT},
      productName = #{productName,jdbcType=VARCHAR},
      productSubId = #{productSubId,jdbcType=BIGINT},
      productSubName = #{productSubName,jdbcType=VARCHAR},
      stockNumber = #{stockNumber,jdbcType=BIGINT},
      stockOperation = #{stockOperation,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      disabled = #{disabled,jdbcType=BOOLEAN},
      locked = #{locked,jdbcType=BOOLEAN},
      version = #{version,jdbcType=INTEGER},
      lastAccess = #{lastAccess,jdbcType=BIGINT},
      creatorId = #{creatorId,jdbcType=VARCHAR},
      createdBy = #{createdBy,jdbcType=VARCHAR},
      createdTime = #{createdTime,jdbcType=BIGINT},
      updaterId = #{updaterId,jdbcType=VARCHAR},
      updatedBy = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectMatchStockByProductId" parameterType="string" resultType="com.xz.match.entity.MatchStock">
        SELECT * FROM match_stock
        WHERE disabled = 0 AND productId = #{productId}
    </select>
</mapper>